import fontsize;
import animation;

animation a;

defaultpen(fontsize(16pt));
defaultpen(linewidth(1));

draw((-2.5cm, .5cm) -- (-1.5cm, .5cm) -- (-1.5cm, 1.5cm) -- (-2.5cm, 1.5cm)--cycle);
draw((-1.5cm, .5cm) -- (-.5cm, .5cm) -- (-.5cm, 1.5cm) -- (-1.5cm, 1.5cm) -- cycle);
draw((-.5cm, .5cm) -- (.5cm, .5cm) -- (.5cm, 1.5cm) -- (-.5cm, 1.5cm) -- cycle);
draw((.5cm, .5cm) -- (1.5cm, .5cm) -- (1.5cm, 1.5cm) -- (.5cm, 1.5cm) -- cycle);
draw((1.5cm, .5cm) -- (2.5cm, .5cm) -- (2.5cm, 1.5cm) -- (1.5cm, 1.5cm) -- cycle);
label("0", (-2cm, 2cm));
label("1", (-1cm, 2cm));
label("2", (0cm, 2cm));
label("3", (1cm, 2cm));
label("4", (2cm, 2cm));
save();
label("G1", (-2cm, 1cm));
label("G2", (-1cm, 1cm));
label("G3", (0cm, 1cm));
label("G4", (1cm, 1cm));
label("G5", (2cm, 1cm));
label("top = -1", (0cm, 2.5cm));
label("$top$ is -1. G1-G5 are garbage values.", (0, 0));
label("0-4 are array indices.", (0, -.5cm));
a.add();
erase();
restore();
save();
label("1", (-2cm, 1cm));
label("G2", (-1cm, 1cm));
label("G3", (0cm, 1cm));
label("G4", (1cm, 1cm));
label("G5", (2cm, 1cm));
label("top = 0", (0cm, 2.5cm));
label("$push(1);$ makes $top$ 0 and G1 1.", (0, 0));
label("0-4 are array indices.", (0, -.5cm));
a.add();
erase();
restore();
save();
label("1", (-2cm, 1cm));
label("2", (-1cm, 1cm));
label("G3", (0cm, 1cm));
label("G4", (1cm, 1cm));
label("G5", (2cm, 1cm));
label("top = 1", (0cm, 2.5cm));
label("$push(2);$ makes $top$ 1 and G2 2.", (0, 0));
label("0-4 are array indices.", (0, -.5cm));
a.add();
erase();
restore();
save();
label("1", (-2cm, 1cm));
label("2", (-1cm, 1cm));
label("3", (0cm, 1cm));
label("G4", (1cm, 1cm));
label("G5", (2cm, 1cm));
label("top = 2", (0cm, 2.5cm));
label("$push(3);$ makes $top$ 2 and G3 3.", (0, 0));
label("0-4 are array indices.", (0, -.5cm));
a.add();
erase();
restore();
save();
label("1", (-2cm, 1cm));
label("2", (-1cm, 1cm));
label("3", (0cm, 1cm));
label("4", (1cm, 1cm));
label("G5", (2cm, 1cm));
label("top = 3", (0cm, 2.5cm));
label("$push(4);$ makes $top$ 3 and G4 4.", (0, 0));
label("0-4 are array indices.", (0, -.5cm));
a.add();
erase();
restore();
label("1", (-2cm, 1cm));
label("2", (-1cm, 1cm));
label("3", (0cm, 1cm));
label("4", (1cm, 1cm));
label("5", (2cm, 1cm));
save();
label("top = 4", (0cm, 2.5cm));
label("$push(5);$ makes $top$ 4 and G5 5.", (0, 0));
label("0-4 are array indices.", (0, -.5cm));
a.add();
erase();
restore();
save();
label("top = 3", (0cm, 2.5cm));
label("$pop();$ returns 5, makes $top$ 3 and array is unchanged.", (0, 0));
label("0-4 are array indices.", (0, -.5cm));
a.add();
erase();
restore();
save();
label("top = 2", (0cm, 2.5cm));
label("$pop();$ returns 4, makes $top$ 2 and array is unchanged.", (0, 0));
label("0-4 are array indices.", (0, -.5cm));
a.add();
erase();
restore();
save();
label("top = 1", (0cm, 2.5cm));
label("$pop();$ returns 3, makes $top$ 1 and array is unchanged.", (0, 0));
label("0-4 are array indices.", (0, -.5cm));
a.add();
erase();
restore();
save();
label("top = 0", (0cm, 2.5cm));
label("$pop();$ returns 2, makes $top$ 0 and array is unchanged.", (0, 0));
label("0-4 are array indices.", (0, -.5cm));
a.add();
erase();
restore();
save();
label("top = 3", (0cm, 2.5cm));
label("$pop();$ returns 5, makes $top$ -1 and array is unchanged.", (0, 0));
label("0-4 are array indices.", (0, -.5cm));
a.add();
erase();
restore();
save();
label("top = -1", (0cm, 2.5cm));
label("$pop();$ causes underflow.", (0, 0));
label("0-4 are array indices.", (0, -.5cm));
a.add();

a.movie(BBox(0.0cm), loops=-1, delay=250);
