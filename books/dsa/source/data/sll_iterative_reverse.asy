import animation;
import fontsize;

animation a;

defaultpen(fontsize(16pt));
defaultpen(linewidth(1));
path p = (-.5cm, .5cm) -- (.5cm, .5cm) -- (.5cm, 1.5cm) -- (-.5cm, 1.5cm) -- cycle;
draw(p);
path p = (-3.5cm, .5cm) -- (-2.5cm, .5cm) -- (-2.5cm, 1.5cm) -- (-3.5cm, 1.5cm) -- cycle;
draw(p);
path p = (2.5cm, .5cm) -- (3.5cm, .5cm) -- (3.5cm, 1.5cm) -- (2.5cm, 1.5cm) -- cycle;
label("10", (-3cm, 1cm));
label("20", (0cm, 1cm));
label("30", (3cm, 1cm));
draw(p);
save();
label("$*head$", (-5.5cm, 1cm));
label("$NULL$", (5.5cm, 1cm));
draw((-4.7cm, 1cm) -- (-3.5cm, 1cm), EndArrow);
draw((3.5cm, 1cm) -- (4.7cm, 1cm), EndArrow);
draw((-2.5cm, 1cm) -- (-.5cm, 1cm), EndArrow);
draw((.5cm, 1cm) -- (2.5cm, 1cm), EndArrow);
label(("$next$"), (-1.5cm, 1.4cm));
label(("$next$"), (1.5cm, 1.4cm));
label(("$next$"), (4.2cm, 1.4cm));
label("Initially we have three nodes in linked list.", (0, 0));
a.add();
erase();
restore();
save();
label("$*head$", (-5.5cm, 1cm));
label("$NULL$", (5.5cm, 1cm));
draw((-4.7cm, 1cm) -- (-3.5cm, 1cm), EndArrow);
draw((3.5cm, 1cm) -- (4.7cm, 1cm), EndArrow);
draw((-2.5cm, 1cm) -- (-.5cm, 1cm), EndArrow);
draw((.5cm, 1cm) -- (2.5cm, 1cm), EndArrow);
label(("$next$"), (-1.5cm, 1.4cm));
label(("$next$"), (1.5cm, 1.4cm));
label(("$next$"), (4.2cm, 1.4cm));
draw((0cm, 2.5cm) -- (0cm, 1.5cm), EndArrow);
label(("$next$"), (0cm, 2.7cm));
label("In the while loop next variable points to $(*head)->next$.", (0, 0));
a.add();
erase();
restore();
save();
label("$*head$", (-5.5cm, 1cm));
label("$NULL$", (5.5cm, 1cm));
draw((-4.7cm, 1cm) -- (-3.5cm, 1cm), EndArrow);
draw((3.5cm, 1cm) -- (4.7cm, 1cm), EndArrow);
draw((-2.5cm, 1cm) -- (-1.5cm, 1cm) -- (-1.5cm, 0.3cm), EndArrow);
draw((.5cm, 1cm) -- (2.5cm, 1cm), EndArrow);
label(("$next$"), (-1.5cm, 1.4cm));
label(("$next$"), (1.5cm, 1.4cm));
label(("$next$"), (4.2cm, 1.4cm));
draw((0cm, 2.5cm) -- (0cm, 1.5cm), EndArrow);
label(("$next$"), (0cm, 2.7cm));
label(("$NULL$"), (-1.5cm, 0cm));
label("$(*head)->next$ is assigned $current$ which is $NULL$.", (0, -.5cm));
a.add();
erase();
restore();
save();
label("$*head$", (-5.5cm, 1cm));
label("$NULL$", (5.5cm, 1cm));
draw((-4.7cm, 1cm) -- (-3.5cm, 1cm), EndArrow);
draw((3.5cm, 1cm) -- (4.7cm, 1cm), EndArrow);
draw((-2.5cm, 1cm) -- (-1.5cm, 1cm) -- (-1.5cm, 0.3cm), EndArrow);
draw((.5cm, 1cm) -- (2.5cm, 1cm), EndArrow);
label(("$next$"), (-1.5cm, 1.4cm));
label(("$next$"), (1.5cm, 1.4cm));
label(("$next$"), (4.2cm, 1.4cm));
draw((0cm, 2.5cm) -- (0cm, 1.5cm), EndArrow);
label(("$next$"), (0cm, 2.7cm));
label(("$NULL$"), (-1.5cm, 0cm));
label("Now $current$ point to $*head$.", (0, -.5cm));
draw((-3cm, 2.5cm) -- (-3cm, 1.5cm), EndArrow);
label(("$current$"), (-3cm, 2.7cm));
a.add();
erase();
restore();
save();
label("$NULL$", (5.5cm, 1cm));
draw((3.5cm, 1cm) -- (4.7cm, 1cm), EndArrow);
draw((-2.5cm, 1cm) -- (-1.5cm, 1cm) -- (-1.5cm, 0.3cm), EndArrow);
draw((.5cm, 1cm) -- (2.5cm, 1cm), EndArrow);
label(("$next$"), (-1.5cm, 1.4cm));
label(("$next$"), (1.5cm, 1.4cm));
label(("$next$"), (4.2cm, 1.4cm));
draw((0cm, 2.5cm) -- (0cm, 1.5cm), EndArrow);
label(("$next$"), (0cm, 2.7cm));
label(("$NULL$"), (-1.5cm, 0cm));
label("$*head$ moves to $next$.", (0, -.5cm));
draw((-3cm, 2.5cm) -- (-3cm, 1.5cm), EndArrow);
label(("$current$"), (-3cm, 2.7cm));
label(("$*head$"), (-1.7cm, 2cm));
draw((-.9cm, 2cm) -- (-.5cm, 1.5cm), EndArrow);
a.add();
erase();
restore();
save();
label("$NULL$", (5.5cm, 1cm));
draw((3.5cm, 1cm) -- (4.7cm, 1cm), EndArrow);
draw((-2.5cm, 1cm) -- (-1.5cm, 1cm) -- (-1.5cm, 0.3cm), EndArrow);
draw((.5cm, 1cm) -- (2.5cm, 1cm), EndArrow);
label(("$next$"), (-1.5cm, 1.4cm));
label(("$next$"), (1.5cm, 1.4cm));
label(("$next$"), (4.2cm, 1.4cm));
draw((3cm, 2.5cm) -- (3cm, 1.5cm), EndArrow);
label(("$next$"), (3cm, 2.7cm));
label(("$NULL$"), (-1.5cm, 0cm));
label("In the next iteration of loop next moves to $(*head)->next$.", (0, -.5cm));
draw((-3cm, 2.5cm) -- (-3cm, 1.5cm), EndArrow);
label(("$current$"), (-3cm, 2.7cm));
label(("$*head$"), (-1.7cm, 2cm));
draw((-.9cm, 2cm) -- (-.5cm, 1.5cm), EndArrow);
a.add();
erase();
restore();
save();
label("$NULL$", (5.5cm, 1cm));
draw((3.5cm, 1cm) -- (4.7cm, 1cm), EndArrow);
draw((-3.5cm, 1cm) -- (-4.5cm, 1cm) -- (-4.5cm, 0.3cm), EndArrow);
draw((-.5cm, 1cm) -- (-2.5cm, 1cm), EndArrow);
label(("$next$"), (-1.5cm, 1.4cm));
label(("$next$"), (-4.5cm, 1.4cm));
label(("$next$"), (4.2cm, 1.4cm));
draw((3cm, 2.5cm) -- (3cm, 1.5cm), EndArrow);
label(("$next$"), (3cm, 2.7cm));
label(("$NULL$"), (-1.5cm, 0cm));
label("$(*head)->next$ is assigned $current$.", (0, -.5cm));
draw((-3cm, 2.5cm) -- (-3cm, 1.5cm), EndArrow);
label(("$current$"), (-3cm, 2.7cm));
label(("$*head$"), (-1.7cm, 2cm));
draw((-.9cm, 2cm) -- (-.5cm, 1.5cm), EndArrow);
a.add();
erase();
restore();
save();
label("$NULL$", (5.5cm, 1cm));
draw((3.5cm, 1cm) -- (4.7cm, 1cm), EndArrow);
draw((-3.5cm, 1cm) -- (-4.5cm, 1cm) -- (-4.5cm, 0.3cm), EndArrow);
draw((-.5cm, 1cm) -- (-2.5cm, 1cm), EndArrow);
label(("$next$"), (-1.5cm, 1.4cm));
label(("$next$"), (-4.5cm, 1.4cm));
label(("$next$"), (4.2cm, 1.4cm));
draw((3cm, 2.5cm) -- (3cm, 1.5cm), EndArrow);
label(("$next$"), (3cm, 2.7cm));
label(("$NULL$"), (-1.5cm, 0cm));
label("$current$ is assigned $*head$.", (0, -.5cm));
draw((0cm, 2.5cm) -- (0cm, 1.5cm), EndArrow);
label(("$current$"), (0cm, 2.7cm));
label(("$*head$"), (-1.7cm, 2cm));
draw((-.9cm, 2cm) -- (-.5cm, 1.5cm), EndArrow);
a.add();
erase();
restore();
save();
label("$NULL$", (5.5cm, 1cm));
draw((3.5cm, 1cm) -- (4.7cm, 1cm), EndArrow);
draw((-3.5cm, 1cm) -- (-4.5cm, 1cm) -- (-4.5cm, 0.3cm), EndArrow);
draw((-.5cm, 1cm) -- (-2.5cm, 1cm), EndArrow);
label(("$next$"), (-1.5cm, 1.4cm));
label(("$next$"), (-4.5cm, 1.4cm));
label(("$next$"), (4.2cm, 1.4cm));
draw((3cm, 2.5cm) -- (3cm, 1.5cm), EndArrow);
label(("$next$"), (3cm, 2.7cm));
label(("$NULL$"), (-1.5cm, 0cm));
label("$*head$ is assigned $next$.", (0, -.5cm));
draw((0cm, 2.5cm) -- (0cm, 1.5cm), EndArrow);
label(("$current$"), (0cm, 2.7cm));
label(("$*head$"), (1.2cm, 2cm));
draw((2cm, 2cm) -- (2.5cm, 1.5cm), EndArrow);
a.add();
erase();
restore();
save();
draw((2.5cm, 1cm) -- (.5cm, 1cm), EndArrow);
draw((-3.5cm, 1cm) -- (-4.5cm, 1cm) -- (-4.5cm, 0.3cm), EndArrow);
draw((-.5cm, 1cm) -- (-2.5cm, 1cm), EndArrow);
label(("$next$"), (-1.5cm, 1.4cm));
label(("$next$"), (-4.5cm, 1.4cm));
label(("$next$"), (1.5cm, 1.4cm));
draw((3cm, 2.5cm) -- (3cm, 1.5cm), EndArrow);
label(("$next$"), (3cm, 2.7cm));
label(("$NULL$"), (-1.5cm, 0cm));
label("$(*head)->next$ is $NULL$. Loop terminates $(*head)->next = current$.", (0, -.5cm));
draw((0cm, 2.5cm) -- (0cm, 1.5cm), EndArrow);
label(("$current$"), (0cm, 2.7cm));
label(("$*head$"), (1.2cm, 2cm));
draw((2cm, 2cm) -- (2.5cm, 1.5cm), EndArrow);
a.add();

a.movie(BBox(0.0cm), loops=-1, delay=250);
